---
- hosts: 192.168.2.15
  remote_user: "{{ansible_ssh_user}}"
  vars:
    docker_network_name: "pi"

  tasks:
   # Siehe: https://docs.ansible.com/ansible/latest/modules/docker_container_module.html

    - name: Create the Nginx config directory
      file:
        path: /home/{{ansible_ssh_user}}/docker-nginx
        owner: "{{ansible_ssh_user}}"
        state: directory

    - name: Copy the Nginx config file
      copy:
        src: files/nginx-reverse-proxy/nginx.conf
        # Upload the local file
        dest: /home/{{ansible_ssh_user}}/docker-nginx/nginx.conf
        owner: "{{ansible_ssh_user}}"
    
    - name: Copy the Nginx TLS config file
      copy:
        src: files/nginx-reverse-proxy/nginx_ssl.conf
        # Upload the local file
        dest: /home/{{ansible_ssh_user}}/docker-nginx/nginx_ssl.conf
        owner: "{{ansible_ssh_user}}"

    - name: Copy the Nginx proxy config file
      copy:
        src: files/nginx-reverse-proxy/nginx_proxy.conf
        # Upload the local file
        dest: /home/{{ansible_ssh_user}}/docker-nginx/nginx_proxy.conf
        owner: "{{ansible_ssh_user}}"
    
    # TLS Setup
    - name: Copy the Nginx crt file
      copy:
        src: files/nginx-reverse-proxy/nginx.crt
        dest: /home/{{ansible_ssh_user}}/docker-nginx/nginx.crt
        owner: "{{ansible_ssh_user}}"

    - name: Replace start cert line in crt file
      ansible.builtin.lineinfile:
        path: "/home/{{ansible_ssh_user}}/docker-nginx/nginx.crt"
        regexp: '-----BEGIN CERTIFICATE-----'
        line: -----BEGIN TRUSTED CERTIFICATE-----
    
    - name: Replace end cert line in crt file
      ansible.builtin.lineinfile:
        path: "/home/{{ansible_ssh_user}}/docker-nginx/nginx.crt"
        regexp: -----END CERTIFICATE-----
        line: '-----END TRUSTED CERTIFICATE-----'
    
    - name: Copy the Nginx key file
      copy:
        src: files/nginx-reverse-proxy/nginx.key
        dest: /home/{{ansible_ssh_user}}/docker-nginx/nginx.key
        owner: "{{ansible_ssh_user}}"
    
    - name: Start the Nginx server container
      docker_container:
        name: nginx-proxy
        pull: yes
        image: nginx:stable-alpine
        restart_policy: unless-stopped
        restart: yes
        detach: yes
        env:
          TZ: "Europe/Berlin"
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /home/{{ansible_ssh_user}}/docker-nginx/nginx.conf:/etc/nginx/nginx.conf:ro
          - /home/{{ansible_ssh_user}}/docker-nginx/nginx_ssl.conf:/etc/nginx/nginx_ssl.conf:ro
          - /home/{{ansible_ssh_user}}/docker-nginx/nginx_proxy.conf:/etc/nginx/nginx_proxy.conf:ro
          - /home/{{ansible_ssh_user}}/docker-nginx/nginx.crt:/etc/ssl/nginx.crt
          - /home/{{ansible_ssh_user}}/docker-nginx/nginx.key:/etc/ssl/nginx.key
        state: started
        networks:
         - name: "{{ docker_network_name }}"
        purge_networks: yes
        networks_cli_compatible: yes

    # # Restart the Container
    # - name: Restart the Nginx server container
    #   docker_container:
    #     name: nginx-proxy
    #     restart: yes
